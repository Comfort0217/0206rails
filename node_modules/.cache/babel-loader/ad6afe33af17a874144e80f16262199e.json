{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { Calendar } from '@fullcalendar/core';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list'; // import './main.css';\n\nvar fetchEvents = function fetchEvents() {\n  return new Promise( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var response, data, message;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"/api/me/events\");\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n              resolve(data);\n              _context.next = 15;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              message = \"エラーが発生しました。運営にお問い合わせください。\";\n              alert(message);\n              reject(message);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\ndocument.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  var calendarEl, _yield$fetchEvents, events, calendar;\n\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          calendarEl = document.getElementById('calendar');\n\n          if (calendarEl) {\n            _context2.next = 3;\n            break;\n          }\n\n          return _context2.abrupt(\"return\");\n\n        case 3:\n          _context2.next = 5;\n          return fetchEvents();\n\n        case 5:\n          _yield$fetchEvents = _context2.sent;\n          events = _yield$fetchEvents.events;\n          calendar = new Calendar(calendarEl, {\n            plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\n            headerToolbar: {\n              left: 'prev,next today',\n              center: 'title',\n              right: false\n            },\n            initialDate: new Date(),\n            // navLinks: true, // can click day/week names to navigate views\n            editable: true,\n            dayMaxEvents: true,\n            // allow \"more\" link when too many events\n            locale: 'ja',\n            events: events\n          });\n          calendar.render();\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n})));","map":{"version":3,"sources":["/Users/satoshifukuhara/mokumoku/app/javascript/calendar.js"],"names":["Calendar","interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","fetchEvents","Promise","resolve","reject","fetch","response","json","data","message","alert","document","addEventListener","calendarEl","getElementById","events","calendar","plugins","headerToolbar","left","center","right","initialDate","Date","editable","dayMaxEvents","locale","render"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,SAAO,IAAIC,OAAJ;AAAA,wEAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEYC,KAAK,CAAC,gBAAD,CAFjB;;AAAA;AAELC,cAAAA,QAFK;AAAA;AAAA,qBAGQA,QAAQ,CAACC,IAAT,EAHR;;AAAA;AAGLC,cAAAA,IAHK;AAIXL,cAAAA,OAAO,CAACK,IAAD,CAAP;AAJW;AAAA;;AAAA;AAAA;AAAA;AAMLC,cAAAA,OANK,GAMK,2BANL;AAOXC,cAAAA,KAAK,CAACD,OAAD,CAAL;AACAL,cAAAA,MAAM,CAACK,OAAD,CAAN;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAWH,CAZD;;AAcAE,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,wEAA+C;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrCC,UAAAA,UADqC,GACxBF,QAAQ,CAACG,cAAT,CAAwB,UAAxB,CADwB;;AAAA,cAEtCD,UAFsC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,iBAIlBZ,WAAW,EAJO;;AAAA;AAAA;AAInCc,UAAAA,MAJmC,sBAInCA,MAJmC;AAKrCC,UAAAA,QALqC,GAK1B,IAAIpB,QAAJ,CAAaiB,UAAb,EAAyB;AACtCI,YAAAA,OAAO,EAAE,CAAEpB,iBAAF,EAAqBC,aAArB,EAAoCC,cAApC,EAAoDC,UAApD,CAD6B;AAEtCkB,YAAAA,aAAa,EAAE;AACXC,cAAAA,IAAI,EAAE,iBADK;AAEXC,cAAAA,MAAM,EAAE,OAFG;AAGXC,cAAAA,KAAK,EAAE;AAHI,aAFuB;AAOtCC,YAAAA,WAAW,EAAE,IAAIC,IAAJ,EAPyB;AAQtC;AACAC,YAAAA,QAAQ,EAAE,IAT4B;AAUtCC,YAAAA,YAAY,EAAE,IAVwB;AAUlB;AACpBC,YAAAA,MAAM,EAAE,IAX8B;AAYtCX,YAAAA,MAAM,EAAEA;AAZ8B,WAAzB,CAL0B;AAmB3CC,UAAAA,QAAQ,CAACW,MAAT;;AAnB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/C","sourcesContent":["import { Calendar } from '@fullcalendar/core';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list';\n// import './main.css';\n\nconst fetchEvents = () => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await fetch(\"/api/me/events\")\n            const data = await response.json()\n            resolve(data)\n        } catch {\n            const message = \"エラーが発生しました。運営にお問い合わせください。\"\n            alert(message)\n            reject(message)\n        }\n    })\n}\n\ndocument.addEventListener('DOMContentLoaded',  async () => {\n    const calendarEl = document.getElementById('calendar');\n    if (!calendarEl) return;\n\n    const { events } = await fetchEvents()\n    const calendar = new Calendar(calendarEl, {\n        plugins: [ interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin ],\n        headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: false\n        },\n        initialDate: new Date(),\n        // navLinks: true, // can click day/week names to navigate views\n        editable: true,\n        dayMaxEvents: true, // allow \"more\" link when too many events\n        locale: 'ja',\n        events: events\n    });\n    calendar.render();\n});\n"]},"metadata":{},"sourceType":"module"}